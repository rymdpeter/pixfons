{"version":3,"sources":["Cell.js","ColorChoser.js","App.js","index.js"],"names":["Cell","state","filled","handleClick","_this","props","activeColor","setState","inlineStyle","this","backgroundColor","color","text","number","react_default","a","createElement","style","onClick","Component","ColorChoser","active","App","setActiveColor","_this2","className","pattern","map","row","index","item","src_Cell","colors","key","src_ColorChoser","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wNA0BeA,0NAtBbC,MAAQ,CACNC,QAAQ,KAGVC,YAAc,WACTC,EAAKC,MAAMC,aACZF,EAAKG,SAAS,CACZL,QAASE,EAAKH,MAAMC,kFAMxB,IAAIM,EAAcC,KAAKR,MAAMC,OAAS,CAAEQ,gBAAiBD,KAAKJ,MAAMM,OAAU,GAC1EC,EAA6B,IAAtBH,KAAKJ,MAAMQ,QAAiBJ,KAAKR,MAAMC,OAA6B,GAApBO,KAAKJ,MAAMQ,OACtE,OACEC,EAAAC,EAAAC,cAAA,MAAIC,MAAOT,EAAaU,QAAST,KAAKN,aACpCS,UAlBWO,cCcJC,6MAdbjB,YAAc,WACZC,EAAKC,MAAMF,YAAYC,EAAKC,MAAMQ,iFAGlC,IAAII,EAAQR,KAAKJ,MAAMgB,OAAS,CAACX,gBAAiBD,KAAKJ,MAAMM,OAAS,KAEtE,OACEG,EAAAC,EAAAC,cAAA,UAAQC,MAAOA,EAAOC,QAAST,KAAKN,aACjCM,KAAKJ,MAAMQ,eATMM,aCuCXG,6MAlCbrB,MAAQ,CACNK,YAAa,KAGfiB,eAAiB,SAACZ,GAChBP,EAAKG,SAAS,CAACD,YAAYK,6EAGpB,IAAAa,EAAAf,KACP,OACEK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aAEIU,EAAQA,QAAQC,IAAI,SAACC,EAAKC,GACxB,OAAQf,EAAAC,EAAAC,cAAA,UACNY,EAAID,IAAI,SAACG,EAAMD,GACf,OAAQf,EAAAC,EAAAC,cAACe,EAAD,CAAMpB,MAAOe,EAAQM,OAAOF,GAAOjB,OAAQiB,EAAMG,IAAKJ,EAAOvB,YAAakB,EAAKvB,MAAMK,aAAewB,MAFtG,SAUhBhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkB,EAAD,CAAab,OAAkC,GAA1BZ,KAAKR,MAAMK,YAAkBK,MAAOe,EAAQM,OAAO,GAAMnB,OAAQ,EAAGV,YAAaM,KAAKc,iBAE3GT,EAAAC,EAAAC,cAACkB,EAAD,CAAab,OAAkC,GAA1BZ,KAAKR,MAAMK,YAAkBK,MAAOe,EAAQM,OAAO,GAAMnB,OAAQ,EAAGV,YAAaM,KAAKc,yBA7BjGJ,aCFlBgB,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c1c22a69.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './cell.css';\n\nclass Cell extends Component {\n  state = {\n    filled: false\n  }\n\n  handleClick = () => {\n    if(this.props.activeColor) {\n      this.setState({\n        filled: !this.state.filled\n      })\n    }\n  }\n\n  render () {\n    var inlineStyle = this.state.filled ? { backgroundColor: this.props.color } : {};\n    var text = this.props.number !== 0 && !this.state.filled ? this.props.number : \"\";\n    return (\n      <td style={inlineStyle} onClick={this.handleClick}>\n      { text }\n      </td>\n    );\n  }\n}\nexport default Cell;\n","import React, {Component} from 'react';\n\nclass ColorChoser extends Component {\n  handleClick = () => {\n    this.props.handleClick(this.props.number);\n  }\n  render () {\n    var style = this.props.active ? {backgroundColor: this.props.color} : null;\n\n    return (\n      <button style={style} onClick={this.handleClick}>\n        {this.props.number}\n      </button>\n    );\n  }\n}\n\nexport default ColorChoser;\n","import React, { Component } from 'react';\nimport pattern from './assets/pattern.json';\nimport './App.css';\nimport Cell from './Cell.js';\nimport ColorChoser from './ColorChoser.js';\n\nclass App extends Component {\n  state = {\n    activeColor: 1\n  }\n\n  setActiveColor = (color) => {\n    this.setState({activeColor:color})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <table>\n          <tbody>\n            {\n              pattern.pattern.map((row, index) => {\n                return (<tr>{\n                  row.map((item, index)=>{\n                  return (<Cell color={pattern.colors[item]} number={item} key={index} activeColor={this.state.activeColor == item} />)\n                })\n              } </tr>);\n              })\n            }\n          </tbody>\n        </table>\n\n        <br />\n        <ColorChoser active={this.state.activeColor == 1} color={pattern.colors[\"1\"]} number={1} handleClick={this.setActiveColor} />\n\n        <ColorChoser active={this.state.activeColor == 2} color={pattern.colors[\"2\"]} number={2} handleClick={this.setActiveColor} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}